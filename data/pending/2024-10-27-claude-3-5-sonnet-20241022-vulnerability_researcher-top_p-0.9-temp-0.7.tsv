q	a
How do I find all cross references to a dangerous function like strcpy?	axt sym.imp.strcpy
Search for format string placeholders like %s, %x, %p in the binary	/s %[spxd]
Show all strings in the binary that could contain command injection	iz~cmd|system|exec|shell
Find potential stack buffer overflow by searching for large memcpy sizes	/a memcpy; pd 10 @@=
Analyze all functions for potential integer overflows	afl~mul,div,add,sub; pdf @@f
Search for uninitialized memory usage by finding reads before writes	ax- @@f; axd @@f; axw @@f; ax
Find all calls to malloc without corresponding free calls	axt sym.imp.malloc; axt sym.imp.free
Search for potential use-after-free vulnerabilities	axt sym.imp.free; pd 20 @@=
Look for dangerous string functions that don't check bounds	axt sym.imp.strcpy; axt sym.imp.strcat; axt sym.imp.sprintf
Find potential command injection points by locating system() calls	axt sym.imp.system; pd 20 @@=
Search for hardcoded credentials or API keys	iz~password|key|secret|token
Analyze function for stack canary protection	af; afl~canary
Find potential integer underflow in allocation size calculations	afl~sub; pdf @@f~sub
Search for unsafe environment variable usage	axt sym.imp.getenv; pd 20 @@=
Look for SQL injection vectors by finding SQL query strings	iz~SELECT|INSERT|UPDATE|DELETE
Find potential off-by-one errors in loop conditions	pdf @@f~loop
Search for format string vulnerabilities in printf-like functions	axt sym.imp.printf; axt sym.imp.sprintf; axt sym.imp.fprintf
Analyze heap operations for double-free vulnerabilities	afl~malloc,free; axff
Find potential race conditions by identifying shared resource access	axt sym.imp.pthread_create; pd 20 @@=
Search for unsafe temporary file creation	axt sym.imp.tmpnam; axt sym.imp.tempnam
Analyze function for stack buffer overflow protection (NX)	i~nx
Find potential type confusion vulnerabilities in C++ code	ic
Search for dangerous file operations without checks	axt sym.imp.open; axt sym.imp.fopen
Look for potential null pointer dereferences	pd 20 @@f~null
Find memory corruption vulnerabilities through array indexing	pd 20 @@f~idx
Search for hardcoded cryptographic keys	iz~0x[0-9a-fA-F]{32}
Analyze ASLR protection status	i~pic,pie
Find potential buffer overflows in string operations	axt sym.imp.strncpy; axt sym.imp.strncat
Search for dangerous signal handling	axt sym.imp.signal
Find potential integer overflow in multiplication	pd 20 @@f~mul
Find all functions that don't have stack frame protection	afl~-frame
Search for ROP gadgets that could be used in an exploit	/R pop rdi; ret
Find all cross references to memset to check for sensitive data cleanup	axt sym.imp.memset
Look for potential heap overflow in custom allocation functions	afl~alloc; pdf @@f
Search for dangerous file path handling functions	axt sym.imp.realpath; axt sym.imp.dirname
Find potential TOCTOU race conditions	axt sym.imp.access; axt sym.imp.open
Analyze all exception handling routines for vulnerabilities	afl~exception,handler; pdf @@f
Search for unsafe random number generation	axt sym.imp.rand; axt sym.imp.random
Find potential integer truncation vulnerabilities	pd 20 @@f~cast
Look for unsafe deserialization functions	axt sym.imp.deserialize; iz~deserialize
Search for hardcoded IPv4 addresses	iz~[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}
Find potential format string vulnerabilities in logging functions	axt sym.imp.syslog; axt sym.imp.log
Search for unsafe SSL/TLS configuration	iz~SSL_CTX_set; axt sym.imp.SSL_CTX_set
Analyze all memory comparison functions for timing attacks	axt sym.imp.memcmp; axt sym.imp.strcmp
Find potential command injection in system configuration	iz~/etc/,/bin/,/usr/
Search for unsafe pointer arithmetic	pd 20 @@f~ptr
Look for potential buffer overruns in custom string handlers	afl~str; pdf @@f
Find all cross references to dangerous network functions	axt sym.imp.recv; axt sym.imp.recvfrom
Search for potential type confusion in C++ virtual functions	av
Find potential race conditions in file operations	axt sym.imp.mkdir; axt sym.imp.rmdir
Analyze all memory allocation sizes for integer overflow	pd 20 @@f~malloc
Search for unsafe environment variable usage in setuid programs	axt sym.imp.getenv; iz~PATH
Find potential ASLR bypass gadgets	/R pop rsp; ret
Look for unsafe signal handlers that call async-unsafe functions	axt sym.imp.signal; pd 20 @@=
Search for hardcoded JWT tokens	iz~eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*
Find potential time-of-check-time-of-use vulnerabilities	axt sym.imp.stat; axt sym.imp.open
Analyze exception handlers for information disclosure	afl~exception; pdf @@f
Search for unsafe random number seeding	axt sym.imp.srand; pd 20 @@=
Find potential race conditions in temporary file creation	axt sym.imp.mktemp; axt sym.imp.tmpfile
Look for dangerous floating-point comparisons	pd 20 @@f~float
Search for potential null pointer dereference after allocation	pd 20 @@f~malloc,NULL
Find all functions that use dangerous string functions without bounds checking	axt sym.imp.gets; axt sym.imp.strcpy
Analyze heap metadata corruption possibilities	afl~heap; pdf @@f
Search for potential stack buffer overflows in recursive functions	afl~recursive; pdf @@f
Find potential use of uninitialized variables	pd 20 @@f~mov
Find all write-what-where gadgets for exploit development	/R mov [reg], reg; ret
Search for potential stack pivoting gadgets	/R xchg rsp, reg; ret
Analyze all virtual function table references for vtable hijacking	av; axt
Find potential format string vulnerabilities in custom logging functions	afl~log; pdf @@f~printf
Search for unsafe XML parsing functions	axt sym.imp.xml_parse; iz~XML
Find all memory unmapping operations for use-after-free	axt sym.imp.munmap; pd 20 @@=
Look for potential type confusion in C++ dynamic_cast operations	axt sym._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv
Search for dangerous file descriptor operations	axt sym.imp.dup2; axt sym.imp.close
Find potential integer signedness issues	pd 20 @@f~signed,unsigned
Analyze all memory comparison functions for timing side channels	axt sym.imp.memcmp; axt sym.imp.strncmp
Search for potential double-fetch vulnerabilities in syscalls	pd 20 @@f~syscall
Find all heap feng shui related operations	axt sym.imp.malloc; axt sym.imp.free; axt sym.imp.realloc
Look for unsafe PRNG initialization	axt sym.imp.srandom; axt sym.imp.initstate
Search for potential race conditions in shared memory operations	axt sym.imp.shmat; axt sym.imp.shmdt
Find all cross references to dangerous JNI functions	axt sym.Java_; pdf @@f
Analyze exception handling for information leakage	afl~catch,throw; pdf @@f
Search for potential buffer overflows in custom memory operations	afl~mem,copy,move; pdf @@f
Find all references to global variables for TOCTOU	axt section..bss
Look for unsafe pointer casting operations	pd 20 @@f~cast,convert
Search for potential heap spraying primitives	afl~alloc,heap; pdf @@f
Find all cross references to dangerous crypto functions	axt sym.imp.MD5_Init; axt sym.imp.DES_set_key
Analyze stack canary implementations	axt sym.__stack_chk_fail
Search for potential type confusion in C++ inheritance	ic; icj
Find all references to dangerous memory mapping functions	axt sym.imp.mmap; axt sym.imp.mprotect
Look for unsafe thread synchronization	axt sym.imp.pthread_mutex_lock; axt sym.imp.pthread_mutex_unlock
Search for potential buffer overflows in string concatenation	axt sym.imp.strcat; pd 20 @@=
Find potential integer overflow in array indexing	pd 20 @@f~array,index
Analyze all exception handler registration points	axt sym.__register_frame_info
Search for unsafe file permission operations	axt sym.imp.chmod; axt sym.imp.chown
Find potential use-after-scope vulnerabilities	pd 20 @@f~scope
Look for dangerous pointer arithmetic in loops	pd 20 @@f~ptr,loop
Search for potential format string vulnerabilities in error handling	axt sym.imp.err; axt sym.imp.error
Find all cross references to dangerous network buffer operations	axt sym.imp.recv; pd 20 @@=
Analyze all memory allocation patterns for double-free	afl~malloc,free; axff
Search for potential type confusion in virtual method calls	av; pd 20 @@f~vtable
Find potential TOCTOU in file operations sequence	pd 20 @@f~open,check
Find gadgets that could be used for ret2libc attacks	/R pop rdi; pop rsi; pop rdx; ret
Search for all instances of unprotected memcpy operations	axt sym.imp.memcpy; pdg @@=
Analyze all exception handling trampolines for exploit primitives	afl~exception; /R mov rsp, [rdi]; ret
Find potential heap overflow in array operations	pd 20 @@f~malloc,[,]
Look for unsafe WebAssembly memory access	afl~wasm; pdf @@f
Search for global offset table (GOT) overwrites	axt section..got.plt
Find potential stack buffer overflows in variadic functions	afl~variadic; pdf @@f
Analyze all memory corruption possibilities in custom allocators	afl~alloc; pdg @@f
Search for dangerous dlopen/dlsym usage	axt sym.imp.dlopen; axt sym.imp.dlsym
Find potential use-after-free in callback handlers	afl~callback; pdf @@f
Look for unsafe SSL certificate validation	axt sym.imp.SSL_CTX_set_verify
Search for potential integer overflow in size calculations	pd 20 @@f~size,len,length
Find all cross references to dangerous privileged operations	axt sym.imp.setuid; axt sym.imp.setgid
Analyze heap unlinking operations for exploitation	pd 20 @@f~unlink
Search for potential format string vulnerabilities in custom printf	afl~print; pdf @@f~format
Find all memory mapping operations without proper checks	axt sym.imp.mmap; pd 20 @@=~check
Look for dangerous pointer dereferencing patterns	pd 20 @@f~deref
Search for potential buffer overflows in string operations	axt sym.imp.strcpy; axt sym.imp.strncpy; pd 20 @@=
Find potential race conditions in signal handlers	axt sym.imp.sigaction
Analyze all memory comparison functions for timing attacks	axt sym.imp.bcmp; axt sym.imp.timingsafe_bcmp
Search for unsafe environment variable usage in setuid binaries	iz~PATH,HOME,LD_PRELOAD
Find potential type confusion in C++ virtual inheritance	ic; avt
Look for unsafe temporary file creation patterns	axt sym.imp.mkstemp; axt sym.imp.tmpnam
Search for potential integer truncation in conversions	pd 20 @@f~convert,cast
Find all cross references to dangerous memory functions	axt sym.imp.alloca; pd 20 @@=
Analyze stack canary bypass possibilities	axt sym.__stack_chk_fail; pd 20 @@=
Search for potential use-after-return vulnerabilities	pd 20 @@f~return
Find all heap metadata corruption possibilities	pd 20 @@f~metadata,chunk
Look for unsafe synchronization in multi-threaded code	axt sym.imp.pthread_mutex_lock
Search for potential double-fetch vulnerabilities in syscalls	afl~syscall; pdf @@f
Find potential format string vulnerabilities in logging	axt sym.imp.syslog; pd 20 @@=
Analyze all memory unmapping operations for use-after-free	axt sym.imp.munmap; pd 20 @@=
Search for unsafe pointer arithmetic in arrays	pd 20 @@f~array,pointer
Find potential integer underflow in allocation size calculations	pd 20 @@f~alloc,size
Look for dangerous type casting operations	pd 20 @@f~cast,convert
Search for potential off-by-one errors in boundary checks	pd 20 @@f~bound,check
Find all heap spray primitives	afl~spray,heap; pdf @@f
Analyze ASLR bypass possibilities through information leaks	iz~addr,pointer,0x
Search for potential stack pivot gadgets	/R xchg esp; ret
Find unsafe deserialization patterns	iz~deserialize,marshal,unmarshal
Look for dangerous JIT compilation patterns	afl~jit; pdf @@f
Find potential shellcode injection points in executable memory regions	dm~rwx,r-x; pd 20 @@=
Search for stack pivot sequences in all executable sections	/R mov rsp, rax; ret; /R xchg rsp, rax; ret
Find all calls to dangerous kernel functions	axt sym.imp.ioctl; axt sym.imp.syscall
Analyze potential ROP chain building blocks	/R pop rdi; pop rsi; ret; /R pop rdx; pop rcx; ret
Search for unsafe SSL/TLS version usage	axt sym.imp.SSLv2_method; axt sym.imp.SSLv3_method
Find potential heap metadata corruption in custom allocators	afl~heap,alloc; pdf @@f~metadata
Look for dangerous SUID binary operations	axt sym.imp.setuid; pd 20 @@=~system,exec,popen
Search for format string vulnerabilities in error handlers	afl~error,handler; pdf @@f~printf,sprintf
Find potential type confusion in virtual function tables	av; pd 20 @@f~vtable,virtual
Analyze all memory comparison functions for timing side channels	axt sym.imp.memcmp; axt sym.imp.strcmp; pd 20 @@=
Search for unsafe PRNG seeding operations	axt sym.imp.srand; pd 20 @@=~time
Find potential race conditions in file operations	axt sym.imp.open; axt sym.imp.unlink; pd 20 @@=
Look for dangerous pointer manipulation in loops	pd 20 @@f~ptr,loop,while
Search for uninitialized memory reads	pd 20 @@f~malloc,read
Find all cross references to dangerous network functions	axt sym.imp.recv; axt sym.imp.recvfrom; pd 20 @@=
Analyze heap double-free possibilities	afl~free; axff
Search for unsafe deserialization in JSON parsing	iz~json_decode,parse; axt
Find potential buffer overflows in string manipulation	axt sym.imp.strcat; axt sym.imp.strncat; pd 20 @@=
Look for unsafe thread synchronization primitives	axt sym.imp.pthread_mutex_lock; pd 20 @@=~unlock
Search for potential integer overflow in calculations	pd 20 @@f~mul,add,sub
Find all memory mapping operations without bounds checking	axt sym.imp.mmap; pd 20 @@=~check,verify
Analyze stack buffer overflow possibilities in arrays	pd 20 @@f~array,stack
Search for unsafe file permission operations	axt sym.imp.chmod; axt sym.imp.chown; pd 20 @@=
Find potential use-after-free in callback functions	afl~callback; pdf @@f~free
Look for dangerous type casting in size calculations	pd 20 @@f~size,cast
Search for potential format string vulnerabilities in logging	axt sym.imp.syslog; pd 20 @@=~format
Find all heap feng shui possibilities	afl~heap; pdf @@f~malloc,free
Analyze exception handler registration points	axt sym.__register_frame; pd 20 @@=
Search for unsafe random number generation	axt sym.imp.rand; pd 20 @@=~seed
Find potential race conditions in shared memory operations	axt sym.imp.shmat; pd 20 @@=
Look for unsafe pointer dereferencing	pd 20 @@f~deref,null
Search for potential buffer overflows in memory copies	axt sym.imp.memcpy; pd 20 @@=~size,len
Find all references to dangerous crypto functions	axt sym.imp.MD5; axt sym.imp.RC4
Analyze stack canary implementation weaknesses	axt sym.__stack_chk_fail; pd 20 @@=~canary
Search for potential type confusion in C++ inheritance	ic; avj
Find all cross references to dangerous memory functions	axt sym.imp.alloca; axt sym.imp.malloc
Look for unsafe thread creation patterns	axt sym.imp.pthread_create; pd 20 @@=
Search for potential double-fetch vulnerabilities	pd 20 @@f~fetch,read
Find potential integer underflow in loop conditions	pd 20 @@f~loop,sub
Analyze all memory deallocation patterns	afl~free,dealloc; pdf @@f
Search for unsafe file handling patterns	axt sym.imp.fopen; pd 20 @@=~close
Find gadgets for SROP (Sigreturn Oriented Programming)	/R syscall; ret; /R int 0x80; ret
Search for UAF vulnerabilities in destructor functions	afl~dtor; pdf @@f~free
Find potential heap overflow in realloc operations	axt sym.imp.realloc; pd 20 @@=~size,check
Look for dangerous JIT spray opportunities	afl~jit,compile; pdf @@f~exec
Search for unsafe PKCS7 padding validation	axt sym.imp.PKCS7_verify; pd 20 @@=
Find potential type confusion in C++ dynamic_cast operations	axt sym._ZNK10__cxxabiv120__si_class_type_info; pdf @@f
Search for dangerous setjmp/longjmp usage	axt sym.imp.setjmp; axt sym.imp.longjmp
Analyze stack pivot gadgets in all executable sections	/R leave; ret; /R pop esp; ret
Find potential format string vulnerabilities in custom printf implementations	afl~print,format; pdf @@f
Look for unsafe certificate pinning bypass	iz~cert,verify; axt sym.imp.SSL_CTX_set_verify
Search for dangerous pointer arithmetic in linked lists	pd 20 @@f~list,next,prev
Find potential integer overflow in array indexing	pd 20 @@f~index,array,bounds
Analyze memory corruption in exception handling	afl~exception; pdf @@f~catch
Search for unsafe shared library loading	axt sym.imp.dlopen; pd 20 @@=~lib
Find potential race conditions in mutex operations	axt sym.imp.pthread_mutex_lock; pd 20 @@=~unlock
Look for dangerous memory mapping permissions	axt sym.imp.mprotect; pd 20 @@=~rwx
Search for potential buffer overflows in wide string operations	axt sym.imp.wcscpy; axt sym.imp.wcscat
Find all heap spraying primitives in JavaScript bridges	iz~javascript,bridge; pdf @@f
Analyze potential stack buffer overflows in alloca usage	axt sym.imp.alloca; pd 20 @@=~size
Search for unsafe XML parsing in DTD handling	iz~dtd,xml; axt sym.imp.XML_Parse
Find potential double-free vulnerabilities in custom allocators	afl~alloc,free; pdf @@f~double
Look for dangerous type confusion in virtual method tables	av; pd 20 @@f~vtable
Search for potential integer truncation in size calculations	pd 20 @@f~size,truncate
Find all references to dangerous cryptographic primitives	axt sym.imp.EVP_des_ecb; axt sym.imp.RC4_set_key
Analyze stack cookie bypass possibilities	axt sym.__stack_chk_fail; pd 20 @@=~cookie
Search for potential use-after-scope in C++ lambdas	pd 20 @@f~lambda,capture
Find unsafe thread local storage usage	axt sym.imp.pthread_getspecific; pd 20 @@=
Look for dangerous signal handler registration	axt sym.imp.signal; pd 20 @@=~handler
Search for potential format string vulnerabilities in vararg functions	afl~vararg; pdf @@f~format
Find all heap metadata corruption possibilities in free lists	pd 20 @@f~free,list,next
Analyze ASLR bypass through information leaks	pd 20 @@f~leak,addr
Search for unsafe deserialization in protobuf handlers	iz~protobuf,deserialize; pdf @@f
Find potential race conditions in file descriptor operations	axt sym.imp.dup2; pd 20 @@=~close
Look for dangerous pointer dereferencing in error handlers	afl~error,handler; pdf @@f~ptr
Search for potential buffer overflows in environment variable handling	axt sym.imp.getenv; pd 20 @@=~strcpy
Find all heap consolidation vulnerabilities	pd 20 @@f~coalesce,merge
Analyze stack overflow possibilities in recursive functions	afl~recursive; pdf @@f~stack
Search for unsafe random number generation in crypto operations	axt sym.imp.RAND_bytes; pd 20 @@=
Find potential type confusion in message handlers	afl~message,handler; pdf @@f~type
Look for dangerous memory unmapping patterns	axt sym.imp.munmap; pd 20 @@=~free
Search for potential integer overflow in multiplication	pd 20 @@f~mul,overflow
Find potential ROP gadgets that manipulate function pointers	/R mov [rax], rdx; ret; /R call [rax]; ret
Search for unsafe YAML parsing vulnerabilities	iz~yaml_parse; axt sym.imp.yaml_parser_load
Find potential heap overflow in custom string implementations	afl~string; pdf @@f~malloc,memcpy
Look for dangerous WebSocket frame handling	iz~websocket; pdf @@f~frame,parse
Search for unsafe LDAP injection points	iz~ldap_search; axt sym.imp.ldap_search_ext
Find all stack pivot sequences in PLT/GOT	/R pop rsp; jmp; /R xchg rsp; jmp @ section..plt
Analyze potential type confusion in message queues	axt sym.imp.mq_receive; pd 20 @@=
Search for dangerous template instantiation	ic~template; pdf @@f
Find potential race conditions in file locking	axt sym.imp.flock; pd 20 @@=~unlock
Look for unsafe IPC mechanism usage	axt sym.imp.msgget; axt sym.imp.msgrcv
Search for potential buffer overflows in custom protocols	afl~protocol; pdf @@f~parse
Find all heap spraying possibilities in DOM operations	iz~document,element; pdf @@f
Analyze stack canary leaks in error handlers	afl~error; pdf @@f~canary
Search for unsafe reflection in dynamic loading	axt sym.imp.dlsym; pd 20 @@=~symbol
Find potential integer overflow in bitmap operations	pd 20 @@f~bitmap,width,height
Look for dangerous DNS resolution handling	axt sym.imp.getaddrinfo; pd 20 @@=
Search for potential format string in logging frameworks	afl~log; pdf @@f~format,sprintf
Find all memory corruption in exception unwinding	axt sym._Unwind_Resume; pd 20 @@=
Analyze potential TOCTOU in configuration files	axt sym.imp.fopen; pd 20 @@=~config
Search for unsafe serialization in RPC handlers	iz~rpc,marshal; pdf @@f
Find potential double-fetch vulnerabilities in syscall wrappers	afl~syscall; pdf @@f~copy_from_user
Look for dangerous certificate validation bypass	iz~verify_cert; axt sym.imp.X509_verify_cert
Search for potential buffer overflows in custom encoders	afl~encode; pdf @@f~buffer
Find all heap metadata corruption in free list operations	pd 20 @@f~unlink,merge
Analyze stack overflow in recursive XML parsing	axt sym.imp.XML_Parse; pd 20 @@=~recursive
Search for unsafe random number usage in key generation	axt sym.imp.RAND_bytes; pd 20 @@=~key
Find potential type confusion in message dispatchers	afl~dispatch; pdf @@f~type,message
Look for dangerous memory mapping in JIT compilation	axt sym.imp.mmap; pd 20 @@=~jit
Search for potential integer underflow in buffer calculations	pd 20 @@f~buffer,size,sub
Find all use-after-free in event handlers	afl~event,handler; pdf @@f~free
Analyze potential race conditions in cleanup handlers	afl~cleanup; pdf @@f~free,close
Search for unsafe pointer usage in linked list traversal	pd 20 @@f~list,next,prev
Find potential buffer overflows in custom memory pools	afl~pool; pdf @@f~alloc
Look for dangerous type casting in message parsing	pd 20 @@f~parse,cast
Search for potential format string in error reporting	axt sym.imp.error; pd 20 @@=~format
Find all heap feng shui in object allocation	afl~object; pdf @@f~new,delete
Analyze exception handler registration for exploits	axt sym.imp.__register_frame_info
Search for unsafe random seeding in PRNG initialization	axt sym.imp.srand; pd 20 @@=~time
Find potential race conditions in signal masking	axt sym.imp.sigprocmask; pd 20 @@=
Look for unsafe pointer arithmetic in array indexing	pd 20 @@f~array,index,ptr
Search for potential buffer overflows in string tokenization	axt sym.imp.strtok; pd 20 @@=~token
Find all heap corruption in custom allocator implementations	afl~allocator; pdf @@f~malloc
Find potential ret2csu gadgets for 64-bit binaries	/R pop rdi; pop rsi; pop rdx; pop rcx; ret
Search for unsafe SSL/TLS downgrade possibilities	axt sym.imp.SSL_set_min_proto_version; pd 20 @@=
Find potential heap buffer overflow in custom vector implementations	afl~vector; pdf @@f~resize,push
Look for dangerous CORS header handling	iz~Origin,Access-Control; pdf @@f
Search for unsafe JWT verification	iz~jwt_verify; axt sym.imp.jwt_decode
Find potential time-of-check-time-of-use in privilege checks	pd 20 @@f~check,privilege
Analyze potential type confusion in message broker handlers	afl~broker,message; pdf @@f
Search for dangerous reflection API usage	iz~reflect,invoke; pdf @@f
Find potential race conditions in async handlers	afl~async,handler; pdf @@f
Look for unsafe deserialization of untrusted data	iz~deserialize,unmarshal; pdf @@f
Search for potential buffer overflows in custom base64 decoders	afl~base64,decode; pdf @@f
Find all heap use-after-free in callback registrations	afl~register,callback; pdf @@f~free
Analyze stack buffer overflow in environment variable handlers	axt sym.imp.getenv; pd 20 @@=~strcpy
Search for unsafe XML external entity (XXE) processing	iz~DOCTYPE,ENTITY; pdf @@f
Find potential integer overflow in memory allocation wrappers	afl~alloc,new; pdf @@f~size
Look for dangerous pointer manipulation in garbage collection	afl~gc,collect; pdf @@f~ptr
Search for potential format string in custom printf wrappers	afl~print,log; pdf @@f~format
Find all memory corruption in exception handler chains	axt sym._Unwind_Resume; pd 20 @@=
Analyze potential TOCTOU in temporary file operations	axt sym.imp.mktemp; pd 20 @@=~open
Search for unsafe object pooling implementations	afl~pool; pdf @@f~alloc,free
Find potential double-fetch vulnerabilities in IPC	afl~ipc; pdf @@f~copy,read
Look for dangerous cryptographic key handling	iz~key,encrypt; axt sym.imp.EVP_EncryptInit
Search for potential buffer overflows in protocol parsers	afl~protocol,parse; pdf @@f~buffer
Find all heap metadata corruption in custom memory managers	afl~memory,manage; pdf @@f~header
Analyze stack overflow in recursive parsers	afl~parse; pdf @@f~recursive
Search for unsafe random number usage in token generation	axt sym.imp.rand; pd 20 @@=~token
Find potential type confusion in plugin loaders	afl~plugin,load; pdf @@f~type
Look for dangerous memory unmapping in module unloading	axt sym.imp.dlclose; pd 20 @@=~free
Search for potential integer underflow in array operations	pd 20 @@f~array,index,sub
Find all use-after-free in timer callbacks	afl~timer,callback; pdf @@f~free
Analyze potential race conditions in resource cleanup	afl~cleanup,destroy; pdf @@f
Search for unsafe pointer usage in tree traversal	pd 20 @@f~tree,traverse
Find potential buffer overflows in compression routines	afl~compress,decompress; pdf @@f
Look for dangerous type casting in network packet handling	pd 20 @@f~packet,cast
Search for potential format string in debug logging	axt sym.imp.debug; pd 20 @@=~format
Find all heap feng shui in object caching	afl~cache; pdf @@f~alloc
Analyze signal handler installation for race conditions	axt sym.imp.sigaction; pd 20 @@=
Search for unsafe initialization in singleton patterns	afl~instance; pdf @@f~init
Find potential race conditions in reference counting	pd 20 @@f~refcount,increment
Look for unsafe pointer arithmetic in string operations	pd 20 @@f~string,ptr
Search for potential buffer overflows in path handling	axt sym.imp.realpath; pd 20 @@=~path
Find potential CALL/JMP register gadgets for ROP chains	/R call rax; ret; /R jmp rdx; ret
Search for unsafe WebSocket frame length handling	pd 20 @@f~websocket,length,mask
Find potential heap overflow in custom string builders	afl~string,builder; pdf @@f~append
Look for dangerous OAuth token validation	iz~oauth,token,verify; pdf @@f
Search for unsafe GraphQL query parsing	iz~graphql,query; axt sym.imp.parse_query
Find all stack pivot gadgets near error handlers	/R leave; ret; /R xchg esp @ sym.error_handler
Analyze potential type confusion in message serialization	afl~serialize; pdf @@f~type
Search for dangerous native method bridging	axt sym.Java_; pd 20 @@=
Find potential race conditions in connection pooling	afl~pool,connection; pdf @@f
Look for unsafe SAML assertion validation	iz~saml,assert; pdf @@f
Search for potential buffer overflows in UTF-8 handling	afl~utf8,decode; pdf @@f
Find all heap spraying in canvas operations	iz~canvas,context; pdf @@f
Analyze stack canary bypass in exception handlers	axt sym.__stack_chk_fail; pd 20 @@=~exception
Search for unsafe plugin loading mechanisms	axt sym.imp.dlopen; pd 20 @@=~plugin
Find potential integer overflow in image processing	pd 20 @@f~image,width,height
Look for dangerous DNS cache poisoning vectors	axt sym.imp.gethostbyname; pd 20 @@=
Search for potential format string in internationalization	afl~i18n; pdf @@f~format
Find all memory corruption in destructor chains	afl~dtor; pdf @@f~delete
Analyze potential TOCTOU in permission checks	pd 20 @@f~permission,check
Search for unsafe protobuf deserialization	iz~protobuf,parse; pdf @@f
Find potential double-fetch in kernel callbacks	afl~callback; pdf @@f~copy_from_user
Look for dangerous SSL session handling	axt sym.imp.SSL_get_session; pd 20 @@=
Search for potential buffer overflows in MIME parsing	afl~mime,parse; pdf @@f
Find all heap metadata corruption in slab allocators	pd 20 @@f~slab,alloc
Analyze stack overflow in recursive JSON parsing	axt sym.imp.json_parse; pd 20 @@=~depth
Search for unsafe random IV generation	axt sym.imp.RAND_bytes; pd 20 @@=~iv
Find potential type confusion in RPC handlers	afl~rpc,handler; pdf @@f~type
Look for dangerous memory mapping in shared libraries	axt sym.imp.dlsym; pd 20 @@=~map
Search for potential integer underflow in buffer management	pd 20 @@f~buffer,size,sub
Find all use-after-free in async callbacks	afl~async,callback; pdf @@f~free
Analyze potential race conditions in thread pools	afl~thread,pool; pdf @@f
Search for unsafe pointer usage in red-black trees	pd 20 @@f~tree,rotate
Find potential buffer overflows in custom serializers	afl~serialize; pdf @@f~write
Look for dangerous type casting in IPC messages	pd 20 @@f~message,cast
Search for potential format string in audit logging	axt sym.imp.audit; pd 20 @@=~format
Find all heap feng shui in object factories	afl~factory; pdf @@f~new
Analyze exception handler chaining for exploits	axt sym._Unwind_RaiseException
Search for unsafe PRNG seeding in key generation	axt sym.imp.srand; pd 20 @@=~key
Find potential race conditions in file descriptors	axt sym.imp.dup2; pd 20 @@=~close
Look for unsafe pointer arithmetic in hash tables	pd 20 @@f~hash,bucket
Search for potential buffer overflows in URL parsing	axt sym.imp.parse_url; pd 20 @@=~decode
Find potential ROP gadgets for syscall invocation	/R pop rax; syscall; /R int 0x80; ret
Search for unsafe MQTT message handling	iz~mqtt,publish; pdf @@f~message
Find potential heap overflow in circular buffers	afl~circular,buffer; pdf @@f~write
Look for dangerous HTTP/2 frame processing	iz~http2,frame; pdf @@f~header
Search for unsafe Kerberos ticket validation	iz~krb5,ticket; axt sym.imp.krb5_verify
Find potential memory disclosure in error messages	afl~error,message; pdf @@f~memcpy
Analyze type confusion in polymorphic containers	ic; pdf @@f~container
Search for dangerous shared memory operations	axt sym.imp.shmat; pd 20 @@=~write
Find potential race conditions in cache invalidation	afl~cache,invalidate; pdf @@f
Look for unsafe LDAP filter construction	iz~ldap,filter; pdf @@f
Search for potential buffer overflows in regex engines	afl~regex,match; pdf @@f
Find all heap use-after-free in observer patterns	afl~observer; pdf @@f~notify
Analyze stack buffer overflow in command parsing	axt sym.imp.system; pd 20 @@=~parse
Search for unsafe XSLT transformation	iz~xslt,transform; pdf @@f
Find potential integer overflow in bitmap processing	pd 20 @@f~bitmap,size
Look for dangerous memory pooling implementations	afl~pool,allocate; pdf @@f~free
Search for potential format string in debug tracing	afl~trace,debug; pdf @@f~format
Find all memory corruption in finalizer methods	afl~finalize; pdf @@f~free
Analyze potential TOCTOU in config loading	axt sym.imp.fopen; pd 20 @@=~config
Search for unsafe MessagePack deserialization	iz~msgpack,unpack; pdf @@f
Find potential double-fetch in device drivers	afl~driver; pdf @@f~ioctl
Look for dangerous TLS renegotiation handling	axt sym.imp.SSL_renegotiate; pd 20 @@=
Search for potential buffer overflows in ASN.1 parsing	afl~asn1,decode; pdf @@f
Find all heap metadata corruption in buddy allocators	pd 20 @@f~buddy,alloc
Analyze stack overflow in recursive XPath evaluation	axt sym.imp.xpath_eval; pd 20 @@=~recursive
Search for unsafe entropy gathering	axt sym.imp.RAND_add; pd 20 @@=~entropy
Find potential type confusion in event dispatchers	afl~dispatch,event; pdf @@f~type
Look for dangerous memory mapping in JIT compilers	axt sym.imp.mprotect; pd 20 @@=~compile
Search for potential integer underflow in ring buffers	pd 20 @@f~ring,buffer,size
Find all use-after-free in deferred execution	afl~defer; pdf @@f~execute
Analyze potential race conditions in work queues	afl~queue,worker; pdf @@f
Search for unsafe pointer usage in skip lists	pd 20 @@f~skiplist,next
Find potential buffer overflows in custom encoders	afl~encode; pdf @@f~output
Look for dangerous type casting in RPC marshalling	pd 20 @@f~marshal,cast
Search for potential format string in syslog calls	axt sym.imp.syslog; pd 20 @@=~format
Find all heap feng shui in object recycling	afl~recycle; pdf @@f~reuse
Analyze signal handler reentrance issues	axt sym.imp.sigaction; pd 20 @@=~handler
Search for unsafe initialization of static objects	afl~static; pdf @@f~init
Find potential race conditions in reference counting	pd 20 @@f~refcount
Look for unsafe pointer arithmetic in string interning	pd 20 @@f~intern,string
Search for potential buffer overflows in path normalization	axt sym.imp.realpath; pd 20 @@=~normalize
Find potential SROP gadgets with syscall frame setup	/R mov rax, 0xf; syscall; /R mov rsp, rax; ret
Search for vtable corruption opportunities in C++ objects	av; pd 20 @@f~vtable,this
Find potential heap type confusion in template instantiation	ic; pdf @@f~template,new
Look for format string vulnerabilities in variadic wrappers	afl~variadic; pdf @@f~va_list
Search for UAF in asynchronous completion handlers	afl~async,complete; pdf @@f~callback
Find potential stack pivot sequences in exception handlers	/R mov rsp, [rdi]; ret @ sym._Unwind
Analyze heap metadata corruption in tcache	pd 20 @@f~tcache,next,prev
Search for type confusion in virtual inheritance	ic; avt; pdf @@f~virtual
Find potential arbitrary write primitives	/R mov [rax], rdx; ret; /R mov [rdi], rsi; ret
Look for double-free in smart pointer implementations	afl~smart_ptr; pdf @@f~delete
Search for heap spray primitives in ArrayBuffer handling	iz~ArrayBuffer; pdf @@f~allocate
Find potential info leaks in error reporting	afl~error,report; pdf @@f~memcpy
Analyze stack cookie bypass in exception unwinding	axt sym.__stack_chk_fail; pd 20 @@=~unwind
Search for race conditions in reference counting	pd 20 @@f~refcount,increment,decrement
Find potential use-after-scope in lambda captures	pd 20 @@f~lambda,capture
Look for type confusion in message dispatching	afl~dispatch; pdf @@f~message,type
Search for uninitialized memory disclosures	pd 20 @@f~malloc,memset
Find potential memory corruption in custom allocators	afl~allocator; pdf @@f~free
Analyze heap unlinking vulnerabilities	pd 20 @@f~unlink,next,prev
Search for format string in logging frameworks	afl~log; pdf @@f~format,va_list
Find potential stack buffer overflow in string operations	axt sym.imp.strcpy; axt sym.imp.strcat
Look for unsafe RTTI handling	axt sym._ZTI; pd 20 @@=
Search for potential integer overflow in size calculations	pd 20 @@f~malloc,size,mul
Find all heap feng shui primitives	afl~alloc,free; pdf @@f~size
Analyze exception handler chain corruption	axt sym._Unwind_Resume; pd 20 @@=
Search for unsafe downcasting operations	ic; pdf @@f~dynamic_cast
Find potential race conditions in cleanup handlers	afl~cleanup; pdf @@f~free,close
Look for dangerous pointer arithmetic in containers	pd 20 @@f~iterator,advance
Search for potential UAF in callback registration	afl~register,callback; pdf @@f~free
Find all memory corruption in destructors	afl~dtor; pdf @@f~delete
Analyze ASLR bypass through info leaks	pd 20 @@f~pointer,leak
Search for unsafe object pooling	afl~pool; pdf @@f~get,put
Find potential double-fetch in system calls	afl~syscall; pdf @@f~copy_from_user
Look for dangerous memory unmapping	axt sym.imp.munmap; pd 20 @@=~free
Search for potential integer underflow	pd 20 @@f~sub,size
Find all use-after-free in event handlers	afl~event,handler; pdf @@f~free
Analyze race conditions in thread synchronization	axt sym.imp.pthread_mutex_lock
Search for unsafe pointer usage in data structures	pd 20 @@f~node,next,prev
Find potential buffer overflows in custom string handlers	afl~string; pdf @@f~length
Look for dangerous type casting in serialization	pd 20 @@f~serialize,cast
Find gadgets for ret2dl_resolve exploitation	/R pop rdi; ret; /R pop rsi; pop rdx; ret @ section..plt
Search for potential FSOP (File Stream Oriented Programming) primitives	axt sym.imp._IO_2_1_stdout_; pd 20 @@=
Find vtable verification bypass opportunities	pd 20 @@f~vtable,verify
Look for unsafe RTTI pointer manipulation	axt sym._ZTI; axt sym._ZTV
Search for heap poisoning in fastbin operations	pd 20 @@f~fastbin,malloc
Find potential tcache poisoning primitives	pd 20 @@f~tcache,next
Analyze vtable hijacking in C++ destructors	afl~dtor; av; pdf @@f
Search for unsafe exception handler registration	axt sym.__register_frame_info; pd 20 @@=
Find potential heap metadata corruption in arena	pd 20 @@f~arena,chunks
Look for dangerous exception pointer manipulation	pd 20 @@f~exception_ptr
Search for unsafe std::vector resizing operations	afl~vector; pdf @@f~resize
Find potential arbitrary write through vtable corruption	av; /R mov [rax], rdx
Analyze stack pivot possibilities in exception handlers	/R leave; ret @ sym._Unwind
Search for unsafe thread local storage access	axt sym.imp.pthread_getspecific
Find potential type confusion in virtual inheritance	ic; avt; pdf @@f~virtual
Look for dangerous memory mapping permissions	axt sym.imp.mprotect; pd 20 @@=~rwx
Search for heap spray primitives in large allocations	pd 20 @@f~malloc,size
Find potential use-after-free in smart pointers	afl~unique_ptr,shared_ptr; pdf @@f
Analyze heap consolidation vulnerabilities	pd 20 @@f~consolidate,merge
Search for unsafe downcasting in polymorphic classes	ic; pdf @@f~dynamic_cast
Find potential memory disclosure in error handlers	afl~error,handler; pdf @@f~memcpy
Look for dangerous signal handler installation	axt sym.imp.sigaction; pd 20 @@=
Search for potential integer overflow in allocation wrappers	afl~alloc; pdf @@f~size,mul
Find all heap corruption in custom allocators	afl~allocator; pdf @@f~free
Analyze stack cookie bypass possibilities	axt sym.__stack_chk_fail; pd 20 @@=
Search for unsafe virtual function table access	av; pd 20 @@f~vtable
Find potential race conditions in reference counting	pd 20 @@f~refcount,atomic
Look for dangerous pointer arithmetic in iterators	pd 20 @@f~iterator,advance
Search for potential UAF in observer patterns	afl~observer; pdf @@f~notify
Find all memory corruption in finalizers	afl~finalize; pdf @@f~free
Analyze ASLR bypass through information leaks	pd 20 @@f~pointer,leak
Search for unsafe object pooling implementations	afl~pool; pdf @@f~get,return
Find potential double-fetch vulnerabilities in syscalls	afl~syscall; pdf @@f~copy
Look for dangerous memory unmapping patterns	axt sym.imp.munmap; pd 20 @@=~free
Search for potential integer underflow in calculations	pd 20 @@f~sub,size
Find all use-after-free in callback handlers	afl~callback; pdf @@f~free
Analyze race conditions in thread synchronization	axt sym.imp.pthread_mutex_lock
Search for unsafe pointer usage in linked lists	pd 20 @@f~list,next
Find potential buffer overflows in string operations	axt sym.imp.strcpy; pd 20 @@=
Look for dangerous type casting in message handling	pd 20 @@f~message,cast
Find potential SIGROP gadgets in signal handlers	/R mov rsp, [rdi]; syscall @ sym.signal_handler
Search for House of Force heap overflow primitives	pd 20 @@f~top_chunk,wilderness
Find potential House of Orange primitives in FILE operations	axt sym.imp._IO_list_all; pd 20 @@=
Look for unsafe std::string COW (Copy-On-Write) operations	afl~string; pdf @@f~reference
Search for vtable verification bypass in constructors	afl~ctor; av; pdf @@f
Find potential heap poisoning in unsorted bin	pd 20 @@f~unsorted_bin,malloc
Analyze potential House of Spirit primitives	pd 20 @@f~stack,free
Search for unsafe exception pointer manipulation in C++	axt sym._ZSt9terminatev
Find potential heap metadata corruption in large chunks	pd 20 @@f~large_chunk,malloc
Look for dangerous virtual dispatch bypasses	av; pd 20 @@f~virtual
Search for unsafe std::map iterator invalidation	afl~map; pdf @@f~iterator
Find potential arbitrary write through FSOP	axt sym.imp._IO_2_1_stdin_; pd 20 @@=
Analyze stack pivot in exception unwinding	/R xchg rsp, rax @ sym._Unwind
Search for unsafe RTTI abuse possibilities	axt sym._ZTI; axt sym._ZTV; pd 20 @@=
Find potential type confusion in template instantiation	ic; pdf @@f~template
Look for dangerous memory page permission changes	axt sym.imp.mprotect; pd 20 @@=~rwx
Search for heap spray in typed arrays	pd 20 @@f~TypedArray,allocate
Find potential use-after-free in weak_ptr usage	afl~weak_ptr; pdf @@f
Analyze heap consolidation for unsafe unlink	pd 20 @@f~unlink,consolidate
Search for unsafe dynamic_cast bypasses	ic; pdf @@f~dynamic_cast,static_cast
Find potential memory disclosure through padding	pd 20 @@f~struct,padding
Look for dangerous SIMD instruction pointer leaks	pd 20 @@f~xmm,ymm
Search for potential integer overflow in new[] operations	axt sym._Znam; pd 20 @@=
Find all heap corruption through double free	afl~free; axff
Analyze stack cookie bypass through info leak	axt sym.__stack_chk_fail; pd 20 @@=~leak
Search for unsafe vtable pointer manipulation	av; pd 20 @@f~this
Find potential race conditions in atomic operations	pd 20 @@f~atomic,compare_exchange
Look for dangerous iterator invalidation	pd 20 @@f~iterator,erase
Search for potential UAF in std::function	afl~function; pdf @@f~bind
Find all memory corruption in placement new	axt sym._ZnwmRKSt9nothrow_t
Analyze ASLR bypass through GOT leaks	pd 20 @@f~got,printf
Search for unsafe object resurrection	afl~resurrect; pdf @@f~delete
Find potential double-fetch in kernel interfaces	afl~ioctl; pdf @@f~copy_from_user
Look for dangerous memory decommitment	axt sym.imp.VirtualFree; pd 20 @@=
Search for potential integer underflow in allocation	pd 20 @@f~alloc,sub
Find all use-after-free in promise/future	afl~promise,future; pdf @@f
Analyze race conditions in lazy initialization	pd 20 @@f~singleton,initialize
Search for unsafe pointer usage in red-black trees	pd 20 @@f~tree,rotate
Find potential buffer overflows in formatted output	axt sym.imp.vsnprintf; pd 20 @@=
Look for dangerous type punning through unions	pd 20 @@f~union,reinterpret_cast
Find gadgets for ret2reg exploitation	/R jmp rax; /R jmp rdi; /R jmp rsi
Search for potential House of Einherjar primitives	pd 20 @@f~prev_size,size
Find unsafe RTTI pointer manipulation in inheritance	ic; pd 20 @@f~typeinfo
Look for dangerous virtual function table caching	av; pd 20 @@f~cache,vtable
Search for heap overlap vulnerabilities	pd 20 @@f~chunk,size,free
Find potential stack pivot in exception dispatch	/R mov esp, [reg]; ret @ sym._Unwind
Analyze unsafe std::vector reallocation	afl~vector; pdf @@f~capacity
Search for dangerous std::shared_ptr cycles	afl~shared_ptr; pdf @@f~circular
Find potential heap metadata corruption in fastbins	pd 20 @@f~fastbin,corrupt
Look for unsafe exception unwinding state	axt sym._Unwind_Resume; pd 20 @@=
Search for vtable verification bypass in inheritance	ic; av; pdf @@f~inherit
Find potential use-after-free in std::function	afl~function; pdf @@f~callable
Analyze heap info leaks through uninitialized allocations	pd 20 @@f~malloc,memset
Search for unsafe RTTI pointer dereference	axt sym._ZTI; pd 20 @@=~virtual
Find potential type confusion in template specialization	ic; pdf @@f~template,special
Look for dangerous memory unmapping in thread cleanup	axt sym.imp.pthread_exit
Search for heap spray in ArrayBuffer allocations	pd 20 @@f~ArrayBuffer,alloc
Find potential use-after-move in C++	pd 20 @@f~move,access
Analyze heap consolidation bypass techniques	pd 20 @@f~consolidate,check
Search for unsafe dynamic dispatch	av; pd 20 @@f~dispatch
Find potential memory disclosure through padding bytes	pd 20 @@f~struct,align
Look for dangerous SIMD register leaks	pd 20 @@f~zmm,ymm,xmm
Search for potential integer overflow in array allocation	axt sym._Znam; pd 20 @@=~multiply
Find all heap double-free through destructor	afl~dtor; pdf @@f~free
Analyze stack cookie bypass through format string	axt sym.imp.printf; pd 20 @@=
Search for unsafe virtual inheritance manipulation	ic; pd 20 @@f~vbase
Find potential race conditions in reference counting	pd 20 @@f~ref_count
Look for dangerous iterator invalidation in loops	pd 20 @@f~iterator,loop
Search for potential UAF in std::bind	afl~bind; pdf @@f~function
Find all memory corruption in placement delete	axt sym._ZdlPvS_
Analyze ASLR bypass through function pointer leaks	pd 20 @@f~fn_ptr
Search for unsafe object lifetime extension	pd 20 @@f~lifetime,extend
Find potential double-fetch in system calls	pd 20 @@f~syscall,copy
Look for dangerous memory decommitment patterns	axt sym.imp.munmap
Search for potential integer underflow in subtraction	pd 20 @@f~sub,check
Find all use-after-free in coroutines	afl~coroutine; pdf @@f
Analyze race conditions in double-checked locking	pd 20 @@f~lock,check
Search for unsafe pointer arithmetic in trees	pd 20 @@f~tree,node
Find potential buffer overflows in string streams	axt sym.imp.strstream
Look for dangerous type punning through pointers	pd 20 @@f~reinterpret,cast
Find potential House of Lore tcache corruption gadgets	pd 20 @@f~tcache_perthread,next
Search for unsafe std::variant type confusion	afl~variant; pdf @@f~index,get
Find potential FSOP write-what-where primitives	axt sym.imp._IO_file_jumps; pd 20 @@=
Look for dangerous exception pointer manipulation in C++ unwinding	axt sym.__cxa_begin_catch
Search for heap poisoning in largebin attacks	pd 20 @@f~largebin,bk_nextsize
Find potential stack pivot sequences in constructor VTable	/R xchg rsp, rax @ sym._ZTV
Analyze unsafe std::any type checking bypass	afl~any_cast; pdf @@f
Search for dangerous std::optional lifetime issues	afl~optional; pdf @@f~value
Find potential heap metadata corruption in malloc_consolidate	pd 20 @@f~malloc_consolidate
Look for unsafe coroutine frame manipulation	afl~coroutine; pdf @@f~frame
Search for vtable bypass in multiple inheritance	ic; av; pdf @@f~virtual
Find potential use-after-free in std::promise	afl~promise; pdf @@f~set_value
Analyze heap info leaks through uninitialized padding	pd 20 @@f~malloc,init
Search for unsafe RTTI manipulation in dynamic_cast	axt sym._ZTI; pd 20 @@=~cast
Find potential type confusion in template metaprogramming	ic; pdf @@f~template,meta
Look for dangerous thread local storage race conditions	axt sym.imp.pthread_getspecific
Search for heap spray in WebAssembly memory	pd 20 @@f~wasm,memory
Find potential use-after-scope in lambda captures	pd 20 @@f~lambda,capture
Analyze heap unlinking corruption possibilities	pd 20 @@f~unlink,check
Search for unsafe virtual dispatch in templates	av; pd 20 @@f~template
Find potential memory disclosure through std::string SSO	pd 20 @@f~string,sso
Look for dangerous SIMD state corruption	pd 20 @@f~avx,state
Search for potential integer overflow in placement new	axt sym._ZnwmPv
Find all heap double-free through shared_ptr cycles	afl~shared_ptr; pdf @@f~cycle
Analyze stack cookie bypass through exception handlers	axt sym.__stack_chk_fail; pd 20 @@=~catch
Search for unsafe virtual base class access	ic; pd 20 @@f~vbase
Find potential race conditions in std::async	afl~async; pdf @@f~future
Look for dangerous iterator invalidation in containers	pd 20 @@f~iterator,container
Search for potential UAF in std::function bind	afl~bind; pdf @@f~callable
Find all memory corruption in custom allocator	afl~allocator; pdf @@f~deallocate
Analyze ASLR bypass through vtable leaks	pd 20 @@f~vtable,print
Search for unsafe object resurrection in destructors	afl~dtor; pdf @@f~this
Find potential double-fetch in driver IOCTLs	afl~ioctl; pdf @@f~buffer
Look for dangerous memory page permissions	axt sym.imp.VirtualProtect
Search for potential integer underflow in container size	pd 20 @@f~size,subtract
Find all use-after-free in observer patterns	afl~observer; pdf @@f~notify
Analyze race conditions in lazy singleton	pd 20 @@f~singleton,init
Search for unsafe pointer usage in skip lists	pd 20 @@f~skiplist
Find potential buffer overflows in iostream	axt sym.imp._ZNSo3putEc
Look for dangerous type punning in unions	pd 20 @@f~union,cast
Find gadgets for ret2libc chain building with ASLR	/R pop rdi; ret; /R pop rsi; pop rdx; ret @ section..plt.got
Search for House of Roman heap exploitation primitives	pd 20 @@f~main_arena,top
Find potential heap overlap in tcache double-free	pd 20 @@f~tcache_entry,next,free
Look for unsafe std::function wrapper exploitation	afl~function_base; pdf @@f~wrapper
Search for FSOP vtable hijacking opportunities	axt sym._IO_str_jumps; pd 20 @@=
Find potential stack pivot in C++ exception objects	/R xchg rsp @ sym.__cxa_throw
Analyze unsafe std::tuple element access	afl~tuple_element; pdf @@f
Search for dangerous std::span bounds checking bypass	afl~span; pdf @@f~size,access
Find potential heap metadata corruption in arena consolidation	pd 20 @@f~arena_consolidate
Look for unsafe fiber context switching	afl~fiber; pdf @@f~switch
Search for vtable corruption in virtual inheritance	ic; av; pdf @@f~vptr
Find potential use-after-free in std::future	afl~future; pdf @@f~get_value
Analyze heap information leaks through padding bytes	pd 20 @@f~alloc,align
Search for unsafe RTTI in multiple inheritance	axt sym._ZTI; pd 20 @@=~multiple
Find potential type confusion in variadic templates	ic; pdf @@f~variadic
Look for dangerous TLS callback exploitation	axt section..tls
Search for heap spray in TypedArray allocations	pd 20 @@f~TypedArray,buffer
Find potential use-after-move in smart pointers	pd 20 @@f~unique_ptr,moved
Analyze heap unlinking in fastbin corruption	pd 20 @@f~fastbin,unlink
Search for unsafe virtual dispatch in constructors	av; pd 20 @@f~constructor
Find potential memory disclosure through std::string COW	pd 20 @@f~string,copy
Look for dangerous AVX state transitions	pd 20 @@f~vzeroupper
Search for potential integer overflow in operator new[]	axt sym._Znam; pd 20 @@=~size
Find all heap double-free through weak_ptr	afl~weak_ptr; pdf @@f~expired
Analyze stack cookie bypass through format strings	axt sym.imp.vsnprintf; pd 20 @@=
Search for unsafe virtual table pointer initialization	ic; pd 20 @@f~vptr,init
Find potential race conditions in std::condition_variable	afl~condition_variable; pdf @@f
Look for dangerous iterator invalidation in algorithms	pd 20 @@f~algorithm,iterator
Search for potential UAF in std::bind placeholders	afl~bind_t; pdf @@f~placeholder
Find all memory corruption in placement array delete	axt sym._ZdaPv
Analyze ASLR bypass through exception pointer leaks	pd 20 @@f~exception_ptr,print
Search for unsafe object temporary lifetime extension	pd 20 @@f~temporary,extend
Find potential double-fetch in kernel callbacks	pd 20 @@f~callback,copy
Look for dangerous memory mapping in JIT compilation	axt sym.imp.mmap; pd 20 @@=~execute
Search for potential integer underflow in container erase	pd 20 @@f~erase,size
Find all use-after-free in signal handlers	afl~signal; pdf @@f~handler
Analyze race conditions in one-time initialization	pd 20 @@f~once,call
Search for unsafe pointer usage in binary trees	pd 20 @@f~tree,balance
Find potential buffer overflows in custom streams	axt sym.imp._ZNSt3ios
Look for dangerous type punning through bit fields	pd 20 @@f~bitfield,cast
Find potential SROP gadgets in signal frame setup	/R mov rdi, rsp; syscall; /R sigreturn
Search for House of Corrosion malloc_consolidate primitives	pd 20 @@f~malloc_consolidate,largebin
Find unsafe std::any type confusion opportunities	afl~any_cast; pdf @@f~type_info
Look for dangerous exception pointer manipulation in unwinding	axt sym._Unwind_RaiseException
Search for heap poisoning in smallbin unlinking	pd 20 @@f~smallbin,bk,fd
Find potential stack pivot sequences in RTTI	/R xchg rsp @ sym._ZTI
Analyze unsafe std::variant discriminator manipulation	afl~variant; pdf @@f~index
Search for dangerous std::optional undefined behavior	afl~optional; pdf @@f~has_value
Find potential heap metadata corruption in tcache poisoning	pd 20 @@f~tcache_entry,next
Look for unsafe coroutine promise manipulation	afl~coroutine; pdf @@f~promise
Search for vtable bypass in virtual inheritance chains	ic; av; pdf @@f~vbase
Find potential UAF in std::shared_future	afl~shared_future; pdf @@f~get
Analyze heap info leaks through uninitialized vtables	pd 20 @@f~vtable,init
Search for unsafe RTTI in cross-module casting	axt sym._ZTI; pd 20 @@=~dynamic_cast
Find potential type confusion in fold expressions	ic; pdf @@f~fold
Look for dangerous thread local construction order	axt sym.__tls_init
Search for heap spray in SharedArrayBuffer	pd 20 @@f~SharedArrayBuffer
Find potential use-after-move in ranges	pd 20 @@f~range,moved
Analyze heap unlinking in tcache double-free	pd 20 @@f~tcache,unlink
Search for unsafe virtual dispatch in destructors	av; pd 20 @@f~destructor
Find potential memory disclosure through std::vector resize	pd 20 @@f~vector,resize
Look for dangerous SIMD register state leaks	pd 20 @@f~xsave,xrstor
Search for potential integer overflow in allocator traits	axt sym._ZN9__gnu_cxx14__alloc_traitsI
Find all heap double-free through circular references	afl~circular; pdf @@f~free
Analyze stack cookie bypass through exception unwinding	axt sym.__stack_chk_fail; pd 20 @@=~unwind
Search for unsafe virtual base class initialization	ic; pd 20 @@f~vbase,init
Find potential race conditions in memory_order_relaxed	afl~memory_order; pdf @@f
Look for dangerous iterator invalidation in associative containers	pd 20 @@f~map,iterator
Search for potential UAF in std::function type erasure	afl~type_erasure; pdf @@f
Find all memory corruption in custom deleters	afl~deleter; pdf @@f~delete
Analyze ASLR bypass through virtual function leaks	pd 20 @@f~virtual,print
Search for unsafe object resurrection in placement new	axt sym._ZnwmPv; pd 20 @@=
Find potential double-fetch in userspace pointer access	pd 20 @@f~user_ptr
Look for dangerous memory decommitment patterns	axt sym.imp.VirtualFree
Search for potential integer underflow in string operations	pd 20 @@f~string,length
Find all use-after-free in asynchronous callbacks	afl~async; pdf @@f~callback
Analyze race conditions in reference counting	pd 20 @@f~refcount,atomic
Search for unsafe pointer usage in intrusive containers	pd 20 @@f~intrusive
Find potential buffer overflows in locale handling	axt sym.imp._ZNSt6locale
Find potential ret2dlresolve gadgets in PLT/GOT	/R pop rdi; ret; /R push [rip]; ret @ section..plt
Search for House of Botcake double-free primitives	pd 20 @@f~tcache_perthread_struct
Find unsafe std::span iterator invalidation	afl~span; pdf @@f~iterator
Look for dangerous std::invoke_result exploitation	afl~invoke_result; pdf @@f~type
Search for FSOP FILE structure corruption	axt sym._IO_2_1_stderr_; pd 20 @@=
Find potential stack pivot in exception handling tables	/R xchg rsp @ section..eh_frame
Analyze unsafe std::aligned_storage type punning	afl~aligned_storage; pdf @@f
Search for dangerous std::launder exploitation	afl~launder; pdf @@f~object
Find potential heap metadata corruption in largebin attack	pd 20 @@f~largebin_index
Look for unsafe coroutine handle manipulation	afl~coroutine_handle; pdf @@f
Search for vtable corruption in multiple inheritance diamonds	ic; av; pdf @@f~diamond
Find potential use-after-free in std::packaged_task	afl~packaged_task; pdf @@f~reset
Analyze heap info leaks through std::string SSO	pd 20 @@f~string_base
Search for unsafe RTTI in cross-casting	axt sym._ZTI; pd 20 @@=~cross_cast
Find potential type confusion in concept constraints	ic; pdf @@f~concept
Look for dangerous thread_local destruction order	axt sym.__cxa_thread_atexit
Search for heap spray in WebAssembly memory imports	pd 20 @@f~wasm_memory
Find potential use-after-scope in ranges views	pd 20 @@f~view,lifetime
Analyze heap unlinking in unsorted bin attack	pd 20 @@f~unsorted_bin
Search for unsafe virtual dispatch in templates	av; pd 20 @@f~template
Find potential memory disclosure through allocator traits	pd 20 @@f~allocator_traits
Look for dangerous SIMD state in context switching	pd 20 @@f~fxsave,fxrstor
Search for potential integer overflow in array new	axt sym._Znam; pd 20 @@=~multiply
Find all heap double-free through weak_ptr aliasing	afl~weak_ptr; pdf @@f~alias
Analyze stack cookie bypass through longjmp	axt sym.imp.longjmp; pd 20 @@=
Search for unsafe virtual inheritance initialization order	ic; pd 20 @@f~vbase_init
Find potential race conditions in memory fences	afl~atomic_thread_fence; pdf @@f
Look for dangerous iterator invalidation in node handles	pd 20 @@f~node_handle
Search for potential UAF in polymorphic allocators	afl~polymorphic_allocator; pdf @@f
Find all memory corruption in custom memory resources	afl~memory_resource; pdf @@f
Analyze ASLR bypass through exception pointer leaks	pd 20 @@f~exception_ptr
Search for unsafe object lifetime extension in binds	pd 20 @@f~bind,lifetime
Find potential double-fetch in syscall wrappers	pd 20 @@f~syscall,copy
Look for dangerous memory mapping in JIT code	axt sym.imp.mmap; pd 20 @@=~jit
Search for potential integer underflow in allocators	pd 20 @@f~allocate,size
Find all use-after-free in async operations	afl~async; pdf @@f~complete
Analyze race conditions in once_flag initialization	pd 20 @@f~once_flag
Search for unsafe pointer usage in red-black trees	pd 20 @@f~rb_tree
Find potential buffer overflows in locale facets	axt sym.imp._ZNKSt6locale5facet
Find potential SIGROP gadgets with context manipulation	/R mov rdi, rsp; syscall; /R mov rax, 15; syscall
Search for House of Empty fastbin corruption	pd 20 @@f~fastbin_index,empty
Find unsafe std::transform_view iterator exploitation	afl~transform_view; pdf @@f~iterator
Look for dangerous std::bind_front type deduction	afl~bind_front; pdf @@f~type
Search for _IO_jump_t vtable corruption	axt sym._IO_file_jumps; pd 20 @@=~vtable
Find potential stack pivot in DWARF unwinding	/R xchg rsp @ section..eh_frame_hdr
Analyze unsafe std::bit_cast exploitation	afl~bit_cast; pdf @@f~reinterpret
Search for dangerous std::assume_aligned misuse	afl~assume_aligned; pdf @@f~pointer
Find potential heap off-by-null in tcache	pd 20 @@f~tcache_entry,null
Look for unsafe generator coroutine manipulation	afl~generator; pdf @@f~yield
Search for vtable corruption in virtual inheritance	ic; av; pdf @@f~virtual_base
Find potential use-after-free in std::jthread	afl~jthread; pdf @@f~detach
Analyze heap info leaks through std::pmr allocators	pd 20 @@f~polymorphic_allocator
Search for unsafe RTTI abuse in exception handling	axt sym._ZTI; pd 20 @@=~throw
Find potential type confusion in concepts specialization	ic; pdf @@f~concept,specialize
Look for dangerous thread_local initialization races	axt sym.__tls_get_addr
Search for heap spray in ArrayBuffer neutering	pd 20 @@f~ArrayBuffer,detach
Find potential use-after-move in ranges adaptors	pd 20 @@f~adaptor,move
Analyze heap unlinking in fastbin consolidation	pd 20 @@f~fastbin,consolidate
Search for unsafe virtual calls in constexpr	av; pd 20 @@f~constexpr
Find potential memory disclosure through allocator padding	pd 20 @@f~allocator,padding
Look for dangerous AVX-512 state corruption	pd 20 @@f~zmm,evex
Search for potential integer overflow in placement array new	axt sym._ZnaRKSt9nothrow_t
Find all heap double-free through shared_ptr aliasing	afl~shared_ptr; pdf @@f~alias
Analyze stack cookie bypass through SEH	axt sym.__except_handler4
Search for unsafe virtual dispatch in modules	ic; pd 20 @@f~module
Find potential race conditions in memory_order_consume	afl~memory_order; pdf @@f~consume
Look for dangerous iterator invalidation in span	pd 20 @@f~span,iterator
Search for potential UAF in std::function storage	afl~function; pdf @@f~storage
Find all memory corruption in allocator rebinding	afl~allocator_traits; pdf @@f~rebind
Analyze ASLR bypass through vtable leaks	pd 20 @@f~vtable,print
Search for unsafe object resurrection in placement delete	axt sym._ZdlPvS_; pd 20 @@=
Find potential double-fetch in ProbeForRead/Write	pd 20 @@f~ProbeForRead
Look for dangerous memory unmapping in DLL unloading	axt sym.imp.FreeLibrary
Search for potential integer underflow in container resize	pd 20 @@f~resize,size
Find all use-after-free in completion handlers	afl~completion; pdf @@f~handler
Analyze race conditions in shared mutex	pd 20 @@f~shared_mutex
Search for unsafe pointer usage in B-trees	pd 20 @@f~btree
Find potential buffer overflows in codecvt facets	axt sym.imp._ZNKSt7codecvt
Find potential ret2csu gadgets with register control	/R pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret
Search for House of Rabbit global_max_fast exploitation	pd 20 @@f~global_max_fast
Find unsafe std::expected error handling abuse	afl~expected; pdf @@f~error
Look for dangerous std::reference_wrapper aliasing	afl~reference_wrapper; pdf @@f~ref
Search for _IO_buf_base corruption opportunities	axt sym._IO_2_1_stdin_; pd 20 @@=~buf_base
Find potential stack pivot in gcc_except_table	/R xchg rsp @ section..gcc_except_table
Analyze unsafe std::is_constant_evaluated exploitation	afl~constant_evaluated; pdf @@f
Search for dangerous std::construct_at misuse	afl~construct_at; pdf @@f~placement
Find potential heap off-by-one in malloc_consolidate	pd 20 @@f~malloc_consolidate,size
Look for unsafe awaitable coroutine manipulation	afl~awaitable; pdf @@f~co_await
Search for vtable corruption in virtual bases	ic; av; pdf @@f~vbase
Find potential use-after-free in std::stop_token	afl~stop_token; pdf @@f~request_stop
Analyze heap info leaks through allocator traits	pd 20 @@f~allocator_traits,propagate
Search for unsafe RTTI in cross-module inheritance	axt sym._ZTI; pd 20 @@=~inherit
Find potential type confusion in template deduction	ic; pdf @@f~deduce
Look for dangerous thread_local destruction races	axt sym.__cxa_thread_atexit_impl
Search for heap spray in SharedArrayBuffer growth	pd 20 @@f~SharedArrayBuffer,grow
Find potential use-after-scope in views composition	pd 20 @@f~view,compose
Analyze heap unlinking in largebin insertion	pd 20 @@f~largebin,insert
Search for unsafe virtual dispatch in CRTP	av; pd 20 @@f~crtp
Find potential memory disclosure through alignment gaps	pd 20 @@f~align,padding
Look for dangerous FMA state corruption	pd 20 @@f~vfmadd
Search for potential integer overflow in array allocation	axt sym._Znam; pd 20 @@=~alloc
Find all heap double-free through enable_shared_from_this	afl~enable_shared_from_this; pdf @@f
Analyze stack cookie bypass through SAFESEH	axt sym.__security_check_cookie
Search for unsafe virtual inheritance construction	ic; pd 20 @@f~vbase_ctor
Find potential race conditions in release sequences	afl~memory_order; pdf @@f~release
Look for dangerous iterator invalidation in split_view	pd 20 @@f~split_view
Search for potential UAF in std::any casting	afl~any_cast; pdf @@f~cast
Find all memory corruption in custom allocator rebinding	afl~allocator_rebind; pdf @@f
Analyze ASLR bypass through exception handling	pd 20 @@f~exception,leak
Search for unsafe object resurrection in destructors	afl~dtor; pdf @@f~resurrect
Find potential double-fetch in kernel callbacks	pd 20 @@f~callback,copy
Look for dangerous memory protection changes	axt sym.imp.VirtualProtect
Search for potential integer underflow in string views	pd 20 @@f~string_view,substr
Find all use-after-free in promise/future chains	afl~promise; pdf @@f~then
Analyze race conditions in barrier synchronization	pd 20 @@f~barrier
Search for unsafe pointer usage in skip lists	pd 20 @@f~skip_list
Find potential buffer overflows in format facets	axt sym.imp._ZNKSt6locale
Find potential ret2plt gadgets for GOT overwrites	/R pop rdi; jmp qword [rip]; /R call qword [rip] @ section..plt
Search for House of Storm allocation patterns	pd 20 @@f~tcache,fastbin,merge
Find unsafe std::ranges::join_view iterator abuse	afl~join_view; pdf @@f~iterator
Look for dangerous std::source_location exploitation	afl~source_location; pdf @@f~current
Search for FILE vtable corruption in stdout	axt sym._IO_2_1_stdout_; pd 20 @@=~vtable
Find potential stack pivot in libunwind	/R mov rsp @ sym._Unwind_Resume
Analyze unsafe std::byte type punning	afl~byte; pdf @@f~reinterpret
Search for dangerous std::hardware_constructive_interference_size misuse	pd 20 @@f~interference_size
Find potential heap metadata corruption in arena	pd 20 @@f~arena,chunks,size
Look for unsafe co_yield expression evaluation	afl~co_yield; pdf @@f~promise
Search for vtable corruption in pure virtual calls	ic; av; pdf @@f~pure_virtual
Find potential use-after-free in std::latch	afl~latch; pdf @@f~count_down
Analyze heap info leaks through memory alignment	pd 20 @@f~align,malloc
Search for unsafe RTTI in exception pointer casts	axt sym._ZTI; pd 20 @@=~exception_ptr
Find potential type confusion in constexpr if	ic; pdf @@f~constexpr_if
Look for dangerous thread_local aliasing	axt sym.__tls_get_addr; pd 20 @@=
Search for heap spray in TypedArray views	pd 20 @@f~TypedArray,subarray
Find potential use-after-move in coroutines	pd 20 @@f~coroutine,move
Analyze heap unlinking in smallbin attacks	pd 20 @@f~smallbin,unlink
Search for unsafe virtual inheritance diamond problem	av; pd 20 @@f~diamond
Find potential memory disclosure through padding bytes	pd 20 @@f~struct,padding
Look for dangerous vectorization state leaks	pd 20 @@f~vector,simd
Search for potential integer overflow in new handler	axt sym._ZnwmRKSt9nothrow_t
Find all heap double-free through circular references	afl~circular; pdf @@f~free
Analyze stack cookie bypass through VEH	axt sym.AddVectoredExceptionHandler
Search for unsafe virtual function pointer manipulation	ic; pd 20 @@f~vptr
Find potential race conditions in std::atomic_ref	afl~atomic_ref; pdf @@f
Look for dangerous iterator invalidation in filter_view	pd 20 @@f~filter_view
Search for potential UAF in std::variant visitors	afl~variant; pdf @@f~visit
Find all memory corruption in allocator propagation	afl~allocator_traits; pdf @@f~propagate
Analyze ASLR bypass through module base leaks	pd 20 @@f~module,base
Search for unsafe object lifetime extension	pd 20 @@f~lifetime,extend
Find potential double-fetch in driver IOCTLs	pd 20 @@f~DeviceIoControl
Look for dangerous memory mapping in DLLs	axt sym.imp.LoadLibraryEx
Search for potential integer underflow in containers	pd 20 @@f~container,size
Find all use-after-free in async operations	afl~async; pdf @@f~complete
Analyze race conditions in condition variables	pd 20 @@f~condition_variable
Search for unsafe pointer usage in AVL trees	pd 20 @@f~avl_tree
Find potential buffer overflows in stream buffers	axt sym.imp._ZNSt15basic_streambuf
Find potential SROP gadgets in signal frame setup with context	/R mov rax, 0xf; syscall; /R xchg rsp, rax; ret
Search for House of Muney tcache poisoning primitives	pd 20 @@f~tcache_perthread,count
Find unsafe std::mdspan dimension calculations	afl~mdspan; pdf @@f~extent
Look for dangerous std::ranges::elements_view exploitation	afl~elements_view; pdf @@f~tuple
Search for _IO_wfile_jumps corruption opportunities	axt sym._IO_wfile_jumps; pd 20 @@=
Find potential stack pivot in C++ ABI unwinding	/R xchg rsp @ sym.__cxa_begin_catch
Analyze unsafe std::span subspan exploitation	afl~span; pdf @@f~subspan
Search for dangerous std::destroy_at misuse	afl~destroy_at; pdf @@f~destruct
Find potential heap off-by-null in malloc_hook	pd 20 @@f~__malloc_hook
Look for unsafe coroutine promise_type manipulation	afl~promise_type; pdf @@f
Search for vtable corruption in virtual inheritance chains	ic; av; pdf @@f~chain
Find potential use-after-free in std::counting_semaphore	afl~counting_semaphore; pdf @@f~release
Analyze heap info leaks through uninitialized padding	pd 20 @@f~struct,pad
Search for unsafe RTTI in multiple inheritance casts	axt sym._ZTI; pd 20 @@=~multiple
Find potential type confusion in fold expressions	ic; pdf @@f~fold_expression
Look for dangerous thread_local storage key reuse	axt sym.pthread_key_create
Search for heap spray in BigInt operations	pd 20 @@f~BigInt,allocate
Find potential use-after-scope in view adaptors	pd 20 @@f~view_adaptor
Analyze heap unlinking in tcache key corruption	pd 20 @@f~tcache_key
Search for unsafe virtual dispatch in templates	av; pd 20 @@f~template_method
Find potential memory disclosure through std::aligned_storage	pd 20 @@f~aligned_storage
Look for dangerous SIMD register state corruption	pd 20 @@f~ymm,zmm
Search for potential integer overflow in placement new array	axt sym._ZnamPv
Find all heap double-free through std::weak_ptr cycles	afl~weak_ptr; pdf @@f~cycle
Analyze stack cookie bypass through SEH chain corruption	axt sym.__except_handler4_common
Search for unsafe virtual base class initialization	ic; pd 20 @@f~vbase_init
Find potential race conditions in memory_order_acq_rel	afl~memory_order; pdf @@f~acq_rel
Look for dangerous iterator invalidation in zip_view	pd 20 @@f~zip_view
Search for potential UAF in std::function small object optimization	afl~function; pdf @@f~small_object
Find all memory corruption in custom allocator propagation	afl~allocator_traits; pdf @@f~select_on_container_copy
Analyze ASLR bypass through exception pointer leaks	pd 20 @@f~exception_ptr,rethrow
Search for unsafe object resurrection in placement delete array	axt sym._ZdaPv
Find potential double-fetch in kernel memory probing	pd 20 @@f~probe_kernel_read
Look for dangerous memory unmapping in module unloading	axt sym.imp.FreeLibrary
Search for potential integer underflow in container operations	pd 20 @@f~container,erase
Find all use-after-free in async coroutines	afl~coroutine; pdf @@f~async
Analyze race conditions in shared mutex upgrades	pd 20 @@f~shared_mutex,upgrade
Search for unsafe pointer usage in intrusive containers	pd 20 @@f~intrusive_ptr
Find potential buffer overflows in locale facets	axt sym.imp._ZNKSt6locale5facet
Find potential ret2syscall gadgets with register setup	/R pop rax; pop rdi; pop rsi; syscall
Search for House of Orange _IO_flush_all_lockp exploitation	axt sym._IO_flush_all_lockp; pd 20 @@=
Find unsafe std::expected monadic operations	afl~expected; pdf @@f~and_then
Look for dangerous std::invoke_result type deduction	afl~invoke_result; pdf @@f~type_t
Search for FILE structure overflow in wide streams	axt sym._IO_wide_data; pd 20 @@=
Find potential stack pivot in C++ exception objects	/R mov rsp @ sym.__cxa_allocate_exception
Analyze unsafe std::bit_cast alignment requirements	afl~bit_cast; pdf @@f~alignment
Search for dangerous std::construct_at type confusion	afl~construct_at; pdf @@f~type
Find potential heap metadata corruption in fastbins	pd 20 @@f~fastbin,corrupt
Look for unsafe co_await operator overloading	afl~operator co_await; pdf @@f
Search for vtable corruption in multiple inheritance	ic; av; pdf @@f~multiple
Find potential use-after-free in std::barrier	afl~barrier; pdf @@f~arrive
Analyze heap info leaks through std::aligned_alloc	pd 20 @@f~aligned_alloc
Search for unsafe RTTI in cross-module dynamic_cast	axt sym._ZTI; pd 20 @@=~dynamic_cast
Find potential type confusion in template specialization	ic; pdf @@f~specialization
Look for dangerous thread_local initialization order	axt sym.__cxa_thread_atexit
Search for heap spray in WebAssembly memory growth	pd 20 @@f~memory_grow
Find potential use-after-move in ranges pipelines	pd 20 @@f~pipeline,move
Analyze heap unlinking in largebin attacks	pd 20 @@f~largebin,unlink
Search for unsafe virtual dispatch in CRTP patterns	av; pd 20 @@f~crtp
Find potential memory disclosure through padding bytes	pd 20 @@f~struct,padding
Look for dangerous AVX state transitions	pd 20 @@f~vzeroupper
Search for potential integer overflow in operator new	axt sym._Znwm; pd 20 @@=~multiply
Find all heap double-free through shared_from_this	afl~enable_shared_from_this; pdf @@f
Analyze stack cookie bypass through exception handlers	axt sym.__security_check_cookie
Search for unsafe virtual inheritance construction	ic; pd 20 @@f~vbase_ctor
Find potential race conditions in memory fences	afl~atomic_thread_fence; pdf @@f
Look for dangerous iterator invalidation in transform_view	pd 20 @@f~transform_view
Search for potential UAF in std::function storage	afl~function; pdf @@f~storage
Find all memory corruption in allocator rebinding	afl~allocator_traits; pdf @@f~rebind
Analyze ASLR bypass through vtable leaks	pd 20 @@f~vtable,print
Search for unsafe object resurrection in destructors	afl~dtor; pdf @@f~resurrect
Find potential double-fetch in kernel callbacks	pd 20 @@f~callback,copy
Look for dangerous memory unmapping in DLLs	axt sym.imp.FreeLibrary
Search for potential integer underflow in container resize	pd 20 @@f~resize,size
Find all use-after-free in completion handlers	afl~completion; pdf @@f~handler
Analyze race conditions in shared mutex	pd 20 @@f~shared_mutex
Search for unsafe pointer usage in red-black trees	pd 20 @@f~rb_tree
Find potential buffer overflows in stream buffers	axt sym.imp._ZNSt15basic_streambuf
Find potential ret2libc chaining gadgets with stack pivot	/R xchg rsp, rax; ret; /R pop rdi; ret @ section..plt
Search for House of Husk tcache poisoning primitives	pd 20 @@f~tcache_entry,key
Find unsafe std::ranges::cartesian_product_view exploitation	afl~cartesian_product; pdf @@f~iterator
Look for dangerous std::stacktrace frame manipulation	afl~stacktrace; pdf @@f~frame
Search for _IO_cookie_jumps vtable corruption	axt sym._IO_cookie_jumps; pd 20 @@=
Find potential stack pivot in LSDA unwinding	/R mov rsp @ section..gcc_except_table
Analyze unsafe std::assume_aligned bounds checking	afl~assume_aligned; pdf @@f~align
Search for dangerous std::destroy_n buffer overflow	afl~destroy_n; pdf @@f~count
Find potential heap metadata corruption in mmap chunks	pd 20 @@f~mmap_chunk
Look for unsafe co_return expression evaluation	afl~co_return; pdf @@f~promise
Search for vtable corruption in virtual base offsets	ic; av; pdf @@f~vbase_offset
Find potential use-after-free in std::binary_semaphore	afl~binary_semaphore; pdf @@f~acquire
Analyze heap info leaks through uninitialized members	pd 20 @@f~member,init
Search for unsafe RTTI in virtual inheritance casts	axt sym._ZTI; pd 20 @@=~virtual_base
Find potential type confusion in concept requirements	ic; pdf @@f~requires
Look for dangerous thread_local synchronization	axt sym.pthread_key_create
Search for heap spray in DataView operations	pd 20 @@f~DataView,buffer
Find potential use-after-scope in coroutine handles	pd 20 @@f~coroutine_handle
Analyze heap unlinking in tcache double free	pd 20 @@f~tcache,double_free
Search for unsafe virtual dispatch in template instantiation	av; pd 20 @@f~template_inst
Find potential memory disclosure through std::variant	pd 20 @@f~variant,valueless
Look for dangerous SIMD register spills	pd 20 @@f~xmm,spill
Search for potential integer overflow in array cookies	axt sym._Znam; pd 20 @@=~cookie
Find all heap double-free through circular dependencies	afl~circular; pdf @@f~dependency
Analyze stack cookie bypass through VEH chaining	axt sym.AddVectoredExceptionHandler
Search for unsafe virtual method table initialization	ic; pd 20 @@f~vtable_init
Find potential race conditions in atomic waiting	afl~atomic_wait; pdf @@f
Look for dangerous iterator invalidation in adjacent_view	pd 20 @@f~adjacent_view
Search for potential UAF in std::any type erasure	afl~any; pdf @@f~type_info
Find all memory corruption in allocator state	afl~allocator_traits; pdf @@f~state
Analyze ASLR bypass through GOT/PLT leaks	pd 20 @@f~got,plt
Search for unsafe object lifetime in references	pd 20 @@f~reference,lifetime
Find potential double-fetch in system calls	pd 20 @@f~syscall,copy
Look for dangerous memory page permissions	axt sym.imp.VirtualProtect
Search for potential integer underflow in iterators	pd 20 @@f~iterator,decrement
Find all use-after-free in async operations	afl~async; pdf @@f~operation
Analyze race conditions in condition variables	pd 20 @@f~condition_variable
Search for unsafe pointer usage in hash tables	pd 20 @@f~hash_table
Find potential buffer overflows in custom streams	axt sym.imp._ZNSt14basic_ofstream
Find potential ret2dl_runtime_resolve gadgets	/R pop rdi; ret; /R pop rsi; ret @ section..plt.got
Search for House of Spirit stack exploitation	pd 20 @@f~stack_chunk,free
Find unsafe std::span iterator manipulation	afl~span; pdf @@f~subspan
Look for dangerous std::coroutine_traits abuse	afl~coroutine_traits; pdf @@f
Search for _IO_str_overflow exploitation	axt sym._IO_str_overflow; pd 20 @@=
Find potential stack pivot in DWARF unwind info	/R xchg rsp @ section..eh_frame
Analyze unsafe std::launder pointer manipulation	afl~launder; pdf @@f~pointer
Search for dangerous std::destroy_at type confusion	afl~destroy_at; pdf @@f~type
Find potential heap off-by-one in bin management	pd 20 @@f~bin_at,size
Look for unsafe promise_type return_value manipulation	afl~promise_type; pdf @@f~return_value
Search for vtable corruption in pure virtual calls	ic; av; pdf @@f~pure_virtual
Find potential use-after-free in std::stop_source	afl~stop_source; pdf @@f~request_stop
Analyze heap info leaks through malloc metadata	pd 20 @@f~malloc_chunk
Search for unsafe RTTI in exception handling	axt sym._ZTI; pd 20 @@=~catch
Find potential type confusion in template deduction	ic; pdf @@f~deduce
Look for dangerous __cxa_atexit registration	axt sym.__cxa_atexit
Search for heap spray in ArrayBuffer neutering	pd 20 @@f~ArrayBuffer,detach
Find potential use-after-move in ranges adaptors	pd 20 @@f~adaptor,move
Analyze heap unlinking in fastbin corruption	pd 20 @@f~fastbin,corrupt
Search for unsafe virtual calls in constexpr	av; pd 20 @@f~constexpr
Find potential memory disclosure through std::variant	pd 20 @@f~variant,valueless
Look for dangerous AVX-512 state corruption	pd 20 @@f~zmm,evex
Search for potential integer overflow in placement new	axt sym._ZnwmPv
Find all heap double-free through weak_ptr cycles	afl~weak_ptr; pdf @@f~cycle
Analyze stack cookie bypass through SEH	axt sym.__except_handler4
Search for unsafe virtual dispatch in modules	ic; pd 20 @@f~module
Find potential race conditions in memory_order_consume	afl~memory_order; pdf @@f~consume
Look for dangerous iterator invalidation in span	pd 20 @@f~span,iterator
Search for potential UAF in std::function storage	afl~function; pdf @@f~storage
Find all memory corruption in allocator rebinding	afl~allocator_traits; pdf @@f~rebind
Analyze ASLR bypass through vtable leaks	pd 20 @@f~vtable,print
Search for unsafe object resurrection in placement delete	axt sym._ZdlPvS_
Find potential double-fetch in ProbeForRead/Write	pd 20 @@f~ProbeForRead
Look for dangerous memory unmapping in DLL unloading	axt sym.imp.FreeLibrary
Search for potential integer underflow in container resize	pd 20 @@f~resize,size
Find all use-after-free in completion handlers	afl~completion; pdf @@f~handler
Analyze race conditions in shared mutex	pd 20 @@f~shared_mutex
Search for unsafe pointer usage in B-trees	pd 20 @@f~btree
Find potential buffer overflows in locale facets	axt sym.imp._ZNKSt7codecvt
Find potential SIGROP gadgets with context restoration	/R mov rdi, rsp; syscall; /R sigreturn; ret
Search for House of Einherjar unlink exploitation	pd 20 @@f~prev_size,unlink
Find unsafe std::ranges::zip_transform_view iterator abuse	afl~zip_transform; pdf @@f~iterator
Look for dangerous std::expected value access	afl~expected; pdf @@f~value_or
Search for FILE vtable corruption in wide char operations	axt sym._IO_wfile_overflow
Find potential stack pivot in exception cleanup	/R xchg rsp @ sym.__cxa_end_catch
Analyze unsafe std::bit_cast alignment violations	afl~bit_cast; pdf @@f~align
Search for dangerous std::uninitialized_copy exploitation	afl~uninitialized_copy; pdf @@f
Find potential heap metadata corruption in top chunk	pd 20 @@f~top_chunk
Look for unsafe coroutine frame manipulation	afl~coroutine_frame; pdf @@f
Search for vtable corruption in virtual thunks	ic; av; pdf @@f~thunk
Find potential use-after-free in std::shared_future	afl~shared_future; pdf @@f~get
Analyze heap info leaks through std::allocator padding	pd 20 @@f~allocator,pad
Search for unsafe RTTI in cross-module dynamic_cast	axt sym._ZTI; pd 20 @@=~dynamic_cast
Find potential type confusion in concept constraints	ic; pdf @@f~requires
Look for dangerous thread_local destruction races	axt sym.__cxa_thread_atexit
Search for heap spray in SharedArrayBuffer growth	pd 20 @@f~SharedArrayBuffer,grow
Find potential use-after-move in ranges pipelines	pd 20 @@f~pipeline,move
Analyze heap unlinking in smallbin corruption	pd 20 @@f~smallbin,unlink
Search for unsafe virtual calls in template instantiation	av; pd 20 @@f~template
Find potential memory disclosure through std::any	pd 20 @@f~any,storage
Look for dangerous SIMD state leaks in context switches	pd 20 @@f~xsave,xrstor
Search for potential integer overflow in array allocation	axt sym._Znam; pd 20 @@=~multiply
Find all heap double-free through enable_shared_from_this	afl~enable_shared_from_this; pdf @@f
Analyze stack cookie bypass through SAFESEH	axt sym.__security_check_cookie
Search for unsafe virtual inheritance construction	ic; pd 20 @@f~vbase_ctor
Find potential race conditions in atomic fences	afl~atomic_thread_fence; pdf @@f
Look for dangerous iterator invalidation in filter_view	pd 20 @@f~filter_view
Search for potential UAF in std::function type erasure	afl~function; pdf @@f~type_erasure
Find all memory corruption in custom allocator rebinding	afl~allocator_rebind; pdf @@f
Analyze ASLR bypass through exception pointer leaks	pd 20 @@f~exception_ptr
Search for unsafe object lifetime in references	pd 20 @@f~reference,lifetime
Find potential double-fetch in kernel callbacks	pd 20 @@f~callback,copy
Look for dangerous memory protection changes	axt sym.imp.VirtualProtect
Search for potential integer underflow in string views	pd 20 @@f~string_view,substr
Find all use-after-free in promise/future chains	afl~promise; pdf @@f~then
Analyze race conditions in barrier synchronization	pd 20 @@f~barrier
Search for unsafe pointer usage in skip lists	pd 20 @@f~skip_list
Find potential buffer overflows in format facets	axt sym.imp._ZNKSt6locale
